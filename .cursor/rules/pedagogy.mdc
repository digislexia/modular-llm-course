---
description:
globs: lessons/**/*.md
---

Purpose: Ensure that the content follows sound educational principles and engages the learner. This rule encodes the teaching approaches and techniques we researched earlier so that the course is effective and enjoyable to learn from.

- Chunking Information: Present information in small, digestible chunks rather than long, uninterrupted sections. The human brain learns better with bite-sized pieces of information. In practice, this means focusing on one sub-topic at a time, using short paragraphs, and pausing between ideas to let them sink in. Avoid info-dumping a huge amount of theory without a break.
- Systematic Progression and Reinforcement: Structure the course so that students regularly revisit and reinforce what they've learned. Important concepts should reappear in later lessons or exercises, reinforcing memory through repetition. For example, if Lesson 1 teaches a fundamental concept, Lesson 3 or 4 might include a task that uses that concept again, so the student recalls and practices it. This spaced repetition helps retention.
- Modular Design: Organize the curriculum into modules or lessons that each have a clear focus. This gives students a sense of progress and achievement at each milestone. Each lesson or module should deliver a tangible outcome or answer a specific question. If the course is large, group related lessons into larger modules with overarching themes.
- Practical Application: Include practical exercises and hands-on tasks wherever possible. After teaching a concept, "learn by doing" is crucial. MANDATORY: Each lesson must include at least 3-5 concrete practice tasks with different difficulty levels (базовый, средний, продвинутый). These should be specific, actionable exercises like coding tasks, problem-solving scenarios, or hands-on projects that students can actually complete. Provide clear success criteria for each task so learners know when they've completed it correctly.
- Active Engagement: Write the content in a way that engages the learner actively. This could mean asking rhetorical questions, posing small challenges ("Пауза для размышлений: как бы вы подошли к проблеме X?"), or encouraging the learner to predict an outcome before you explain it. MANDATORY: Include at least 2-3 "Проверьте себя" moments in longer lessons where students pause to reflect or test their understanding before continuing. Even though the course is not interactive in real-time, these techniques make the learner mentally participate rather than passively read.
- Clarity and Simplicity: Explain complex ideas in simple terms. Use analogies or metaphors if they help convey the idea (especially for abstract concepts). Assume the perspective of a student who is new to the topic: avoid unexplained jargon, and build up from basic concepts to complex ones. If an advanced term is unavoidable, define it clearly when it first appears.
- Visual Aids and Examples: When appropriate, use diagrams, illustrations, or real-life examples to clarify concepts. For instance, if teaching algorithms, a simple diagram or a step-by-step real-world analogy can make it easier to grasp. Examples should be relevant to the learners’ context, so they can see why the concept matters.
- Feedback and Solutions: For any exercise or question posed, consider providing feedback or the solution (possibly in a later section or an appendix). This helps learners check their understanding. Even if not giving full solutions, provide guidance like what a correct approach would involve, so learners can self-evaluate.
- Motivation and Encouragement: Write in an encouraging tone. Acknowledge that some concepts can be challenging and reassure the learner that with practice it becomes easier. Celebrate milestones in content (e.g., “Great! Now you have learned X, which is a significant step toward mastering Y.”). Maintaining a positive tone can keep learners motivated to continue.